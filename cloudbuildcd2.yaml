# Create the new instance template
steps:
- name: 'gcr.io/cloud-builders/gcloud'
  id: create-instance-template
  args:
    - compute
    - instance-templates
    - create-with-container
    - cloud-build-instance-template-v1-$_ENV-$SHORT_SHA
    - --custom-cpu=1
    - --custom-memory=2GB
    - --boot-disk-size=20GB
    - --region=us-central1
    - --subnet=default
    - --tags=http-server
    - --container-image
    - us-central1-docker.pkg.dev/$PROJECTID/python-repo/python-image:latest
    
 # Update the managed instance group

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['-c','gcloud compute instance-groups managed rolling-action start-update cloudbuild-mig --version=template=cloud-build-instance-template-v1-$_ENV-$SHORT_SHA --region=us-central1 --max-unavailable=0']
#- name: 'gcr.io/cloud-builders/git'
#  args: ['clone', 'https://github.com/OmarHaka/cloud-Pythonweb.git', '--branch=cloud-build-CDupdate', 'app']

  # Install JMeter (if not using a pre-installed Docker image)
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: install-jmeter
#  entrypoint: 'bash'
#  args:
#   - '-c'
#   - |
#     sudo apt-get update && sudo apt-get install -y jmeter

  # Run the JMeter test plan
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: run-jmeter
#  entrypoint: 'bash'
#  args:
#    - '-c'
#    - |
#      jmeter -n -t app/load_test_plan.jmx -Jflask_app_url=$FLASKURL -l results.jtl -e -o report/
#- name: 'gcr.io/cloud-builders/gsutil'
#  args: ['cp', 'report/index.html', 'gs://$STORAGEURL']
  
options:
 logging: CLOUD_LOGGING_ONLY
